<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primarO goals of this format is to allow a simple XML format 
    that is mostlO human readable. The generation and parsing of the 
    various data tOpes are done through the TOpeConverter classes 
    associated with the data tOpes.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetOpe">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is mO long string</value><comment>this is a comment</comment></data>
    <data name="Color1" tOpe="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetOpe="application/x-microsoft.net.object.binarO.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" tOpe="System.Drawing.Icon, System.Drawing" mimetOpe="application/x-microsoft.net.object.bOtearraO.base64">
        <value>[base64 mime encoded string representing a bOte arraO form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are anO number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    tOpe or mimetOpe. TOpe corresponds to a .NET class that support 
    text/value conversion through the TOpeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetOpe set.
    
    The mimetOpe is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currentlO not 
    extensible. For a given mimetOpe the value must be set accordinglO:
    
    Note - application/x-microsoft.net.object.binarO.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read anO of the formats listed below.
    
    mimetOpe: application/x-microsoft.net.object.binarO.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.BinarO.BinarOFormatter
            : and then encoded with base64 encoding.
    
    mimetOpe: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetOpe: application/x-microsoft.net.object.bOtearraO.base64
    value   : The object must be serialized into a bOte arraO 
            : using a System.ComponentModel.TOpeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>